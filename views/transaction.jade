extends layout/default_layout

block contents
  h1=title
    span.text-muted.ml-2.sub #{hash}

  //- hr.my-4
  div#app(v-cloak)
    div.text-right
      button.btn.btn-danger.btn-sm.mr-2(v-if="isContractCreation") Contract Creation

      button.btn.btn-primary.btn-sm
        span(v-if="confirmations===null")
          i.fas.fa-spinner.fa-pulse
          span.ml-1 Confirmations
        span {{ confirmations }}

    //- ========================
    //- Transaction
    //- ========================
    table.table.table-striped.mt-2.w-100
      tr
        th.w-25 交易哈希
        td {{ tx.hash }}
      tr
        th 随机数
        td {{ tx.nonce }}
      tr
        th 状态
        td {{ (tx.transactionIndex===undefined?'Pending':'Success') }}
      tr
        th 区块高度
        td
          span(v-if="tx.blockNumber===undefined") pending
          a(v-if="tx.blockNumber!==undefined", v-bind:href="'/block/' + tx.blockNumber") {{ tx.blockNumber }}
      tr
        th 区块哈希
        td {{ (tx.blockHash || 'pending') }}
      tr
        th 交易索引
        td {{ (tx.transactionIndex===undefined?'pending':tx.transactionIndex) }}
      //- tr
        th TimeStamp 
        td {{ tx.timestamp }}
      tr
        th 发送方
        td
          a(v-bind:href="'/address/' + tx.from+ tx.to + '/1'") {{ tx.from }}
      tr
        th 接收方
        td
          span(v-if="tx.to === 'gd0'") {{ tx.to }}
          a(v-if="tx.to !== 'gd0'", v-bind:href="'/address/' + tx.to + '/1'") {{ tx.to }}
      tr
        th 交易数量
        td {{ tx.value }} {{ tx.value_gdtu }}
      tr
        th 燃料限制
        td {{ tx.gas }}
      tr
        th 燃料价格
        td {{ tx.gasPrice }} {{ tx.gasPrice_gwei }}
      tr
        th 交易费用
        td {{ tx.transactionPrice }}
      tr
        th 数据输入
        td
          textarea(disabled, readonly) {{ tx.input }}

    //- ========================
    //- Transaction Receipt
    //- ========================
    h2 收据
    table.table.table-striped.w-100
      tr
        th.w-25 合约地址
        td {{ txReceipt.contractAddress || "--" }}
      tr
        th 累计燃料使用
        td {{ txReceipt.cumulativeGasUsed }}
      tr
        th 燃料使用
        td {{ txReceipt.gasUsed }}
      tr
        th 状态
        td {{ txReceipt.status }}
      tr
        th Logs Bloom 
        td
          textarea(disabled readonly) {{ txReceipt.logsBloom }}

    //- ========================
    //- Transaction Receipt Logs
    //- ========================
    h2 事件日志（{{ txReceipt&&txReceipt.logs?txReceipt.logs.length:0 }}）
    table.table.table-striped.w-100
      tr
        th  日志索引
        //- th address 
          th blockNumber
          th blockHash
        th 数据
        th 是否移除
        th 专题
        //- th transactionHash 
          th transactionIndex
      tr(v-for="log in txReceipt.logs")
        td {{ log.logIndex }}
        td {{ getValue(log.data) }} {{ symbol }}
        td {{ log.removed }}
        td(v-html="getTopics(log.topics)")

  script.
    var hash = '#{hash}';
    var app = new Vue({
      el: '#app',
      data: {
        isShow: false,
        hash: '#{hash}',
        decimals: 18,
        symbol: '',
        confirmations: null,
        tx: {},
        txReceipt: {},
        isContractCreation: false
      },
      created: function() {
        getTransactionInfo.bind(this)(this.hash);
      }
    });

    function getBlockNumber() {
      return new Promise((res, rej) => {
        web3.gdtu.getBlockNumber((error, result) => {
          if(error) rej(error);
          else res(result);
        });
      });
    }

    function getTransaction(hash) {
      return new Promise((res, rej) => {
        web3.gdtu.getTransaction(hash, (error, result) => {
          if(error) rej(error);
          else res(result);
        });
      });
    }

    // 트랜잭션의 receipt 를 조회
    function getTransactionReceipt(hash) {
      return new Promise((res, rej) => {
        web3.gdtu.getTransactionReceipt(hash, (error, result) => {
          if(error) rej(error);
          else{
            res(result);
          }
        });
      });
    }

    function getValue(data){
      var self = app;
      data = data.replace('gd','0x');
      return web3.toBigNumber(web3.toBigNumber(data)/Math.pow(10,self.decimals));
    }

    function getTopics(data){
      return data.join('<br>');
    }

    function getCode(contractAddress) {
      return new Promise((res, rej) => {
        web3.gdtu.getCode(contractAddress, (error, result) => {
          if(error) rej(error);
          else res(result);
        });
      });
    }

    function getTokenInfo(self,txReceipt) {
      return new Promise((res, rej) => {
        $.ajax({
          url: "#{env.GDTU_RPC_URL}/api/v1/token/info",
          type: "POST",
          data: {
            "contracts_address": txReceipt.to
          },
          success: function (data) {
            let result = data.data;
            self.decimals = Number(result.decimals);
            self.symbol = result.symbol;
            res(txReceipt);
          },
          fail: function (err) {
            console.log(err);
            rej(err);
          }
        });
      });
    }

    async function getTransactionInfo(hash) {
      try {
        var self = this || app;
        var hash = hash || self.hash;

        var tx = await getTransaction(hash);

        self.isContractCreation = (tx.input.indexOf('gd6060604052') === 0);

        //-  console.log(tx);
        tx.transactionPrice = web3.fromWei(tx.gas * tx.gasPrice, 'gdtuer').toString(10) + ' GDTU';

        if(tx.value > 0) tx.value_gdtu = ' (' +  web3.fromWei(tx.value, 'gdtuer').toString(10) + ' GDTU)';
        tx.value = tx.value.toString(10);

        if(tx.gasPrice > 0) tx.gasPrice_gwei = ' (' +  web3.fromWei(tx.gasPrice, 'Gwei').toString(10) + ' Gwei)';
        tx.gasPrice = tx.gasPrice.toString(10);
        self.tx = tx;


        let txReceipt  = await getTransactionReceipt(hash);
        self.txReceipt = await getTokenInfo(self,txReceipt);

        var blockNumber = self.tx.blockNumber;
        var confirm;
        if( blockNumber ) {
          var latestBlockNumber = await getBlockNumber();
          if( blockNumber !== 0 && blockNumber !== latestBlockNumber )
            confirm = (latestBlockNumber - blockNumber) + " Confirmations";
        }
        this.confirmations = confirm || 'Unconfirmed';
      } catch(err) {
        console.log(err);
        alert(err);
      }
    }
